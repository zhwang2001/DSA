[33mcommit 3632da9ab3c8469523e7729534144477f8c378c3[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: Zihao Wang <zhwang2001@gmail.com>
Date:   Sun Sep 11 22:23:21 2022 -0400

    sdf

[1mdiff --git a/leetcode_solutions.py b/leetcode_solutions.py[m
[1mindex f247854..f9fca33 100644[m
[1m--- a/leetcode_solutions.py[m
[1m+++ b/leetcode_solutions.py[m
[36m@@ -1,3 +1,50 @@[m
[32m+[m[32m#Reverse Linked List[m
[32m+[m
[32m+[m[32mclass ListNode:[m
[32m+[m[32m    def __init__(self, val = 0, next = None):[m
[32m+[m[32m        self.val = val[m
[32m+[m[32m        self.next = next[m
[32m+[m
[32m+[m[32mclass Solution(object):#reverse the linked list using a stack[m
[32m+[m[32m    def reverseList(self, head):[m
[32m+[m[32m        """[m
[32m+[m[32m        :type head: ListNode[m
[32m+[m[32m        :rtype: ListNode[m
[32m+[m[32m        """[m
[32m+[m[32m        self.head, self.tail = head, head[m
[32m+[m[32m        stack = [None][m
[32m+[m[32m        while self.head != None:[m
[32m+[m[32m            stack.append(self.head.val)[m
[32m+[m[32m            self.head = self.head.next[m
[32m+[m[32m        self.head = self.tail[m
[32m+[m[32m        while stack[-1] == None:[m
[32m+[m[32m            self.head.next = stack.pop()[m
[32m+[m[32m            return self.head[m
[32m+[m[41m            [m
[32m+[m[41m            [m
[32m+[m
[32m+[m[41m            [m
[32m+[m[32mTypeError: [None, ListNode{val: 1, next: ListNode{val: 2, next: ListNode{val: 3, next: ListNode{val: 4, next: ListNode{val: 5, next: None}}}}}] is not valid value for the expected return type ListNode[m
[32m+[m[32m    raise TypeError(str(ret) + " is not valid value for the expected return type ListNode");[m
[32m+[m[32mLine 44 in _driver (Solution.py)[m
[32m+[m[32m    _driver()[m
[32m+[m[32mLine 51 in <module> (Solution.py)[m
[32m+[m[32mDuring handling of the above exception, another exception occurred:[m
[32m+[m[32mTypeError: unhashable type: 'list'[m
[32m+[m[32mLine 40 in has_cycle (./python3/listnode.py)[m
[32m+[m[32mLine 53 in serialize (./python3/listnode.py)[m
[32m+[m[32mLine 69 in _serialize (./python3/__serializer__.py)[m
[32m+[m[32m    out = ser._serialize(ret, 'ListNode')[m
[32m+[m[32mLine 42 in _driver (Solution.py)[m
[32m+[m[41m        [m
[32m+[m[41m            [m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
 class Solution_34(object):[m
     [m
     def searchRange(self, nums = list[int], target = int) -> list[int]: [m
[36m@@ -193,7 +240,7 @@[m [msol = Solution_125()[m
 print(sol.isPalindrome(s = 'racecar'))[m
 print(sol.isPalindrome(s = 'sdfsdff'))[m
 print(sol.isPalindrome(s = '23 sdf SSS fds 32'))[m
[31m-print(sol.isPalindrome(s = '23 SDFADF  sfd SD FDDF'))[m
[32m+[m[32mprint(sol.isPalindrome(s = ':23 SDFADF  sfd SD FDDF'))[m
 [m
 [m
 [m
[36m@@ -257,6 +304,12 @@[m [mclass linkedlist:[m
 #git status (status of uncommited and tracked files)[m
 #git stage (staging area after using git add to start tracking file)[m
 #git revert (revert changes)[m
[32m+[m[32m#git diff --ours[m
[32m+[m[32m#git diff --theirs[m
[32m+[m[32m#git show[m
[32m+[m[32m#git revert[m
[32m+[m[32m#gitk (GUI application for git)[m
[32m+[m[32m#git blame <filename> (check the changes to a specific file)[m
 [m
 #git config user.name "zhwang822" (local configuration)[m
 #git config user.email "jameszihao.wang@mail.utoronto.ca" (local configuration)[m
[36m@@ -471,6 +524,11 @@[m [mvimrc configuration guide how to customize your vim code editor with mappings vi[m
 hilight Cursorcolumn ctermbg = blue cterm = red[m
 hilight Cursorline ctermbg = blue cterm = red[m
 [m
[32m+[m[32mzz: save and close[m
[32m+[m[32mG = go to end of page[m
[32m+[m[32m:b <filename> go to file[m
[32m+[m[32m:ls use ls in vim command[m
[32m+[m[32m:pwd = current directory[m
 """[m
 [m
 [m
